{"ast":null,"code":"var _jsxFileName = \"/home/kimhankins09/Web Development/organizer-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Greeting } from \"./components/Greeting\";\nimport { NewToDo } from \"./components/NewToDo\";\nimport { ToDoItem } from \"./components/ToDoItem\";\nimport { Weather } from \"./components/Weather\";\nimport { Quotes } from \"./components/Quotes\";\nimport { Meme } from \"./components/Meme\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [items, setItems] = useState([]);\n  const [weather, setWeather] = useState({\n    location: \"\",\n    forecast: \"\",\n    currentTemp: \"\",\n    feltTemp: \"\",\n    imgSrc: \"\"\n  });\n  const [checkWeather, setCheckWeather] = useState(true);\n  const [inputText, setInputText] = useState(\"\");\n  const [quote, setQuote] = useState({\n    quote: \"\",\n    author: \"\"\n  });\n  const [checkQuote, setCheckQuote] = useState(true);\n  const [memeURL, setMemeURL] = useState(\"\");\n  const [checkMeme, setCheckMeme] = useState(true);\n  let query = \"New York City\";\n  const units = \"metric\";\n  let temp = 0;\n  let felt = 0;\n  let descr = \"\";\n  let imgURL = \"\";\n  let apiKey = \"\"; //next step goals: (CURRENT) get google login working and save user with todo list items in db...(LATER) save most recently searched city in db so server can send it at the start each time\n\n  function handleCallbackResponse(response) {\n    // console.log(\"Encoded JWT ID token: \" + response.credential);\n    const userObject = jwt_decode(response.credential);\n    setUser(userObject);\n    saveUser();\n  }\n\n  useEffect(() => {\n    /* global google */\n    google.accounts.id.initialize({\n      client_id: \"1094993871261-a0p2bbbe2t55215167an6eoll754ealg.apps.googleusercontent.com\",\n      callback: handleCallbackResponse\n    });\n    google.accounts.id.renderButton(document.getElementById(\"signInDiv\"), {\n      theme: \"outline\",\n      size: \"large\"\n    });\n  }, []);\n\n  function saveUser() {\n    let newUser = user.email;\n    console.log(newUser);\n    axios.post(\"http://localhost:8000/user\", {\n      user: newUser\n    }).then(function (response) {\n      console.log(response);\n    });\n  }\n\n  axios.get(\"http://localhost:8000/\").then(function (response) {\n    if (items.length === 0) {\n      let savedList = response.data.data;\n      let userToDo = savedList.map(note => {\n        return note.name;\n      });\n      setItems([...userToDo]);\n    }\n  }).catch(function (err) {\n    console.log(err);\n  }).then(function () {});\n  axios.get(\"http://localhost:8000/weather/\").then(function (response) {\n    apiKey = response.data.data;\n\n    if (checkWeather) {\n      getWeather(query);\n      console.log(\"did it\");\n      setCheckWeather(false);\n    }\n  }).catch(function (err) {\n    console.log(err);\n  }); //Possibly need a different quote generator as this one has too low of a daily request counter.\n\n  axios.get(\"http://localhost:8000/quote\").then(function (response) {\n    // console.log(response);\n    let todaysQuote = response.data.data.quote;\n    let todaysAuthor = response.data.data.author;\n\n    if (checkQuote) {\n      setQuote({\n        quote: todaysQuote,\n        author: todaysAuthor\n      });\n      setCheckQuote(false);\n    }\n  }).catch(function (err) {\n    console.log(err);\n  });\n  axios.get(\"http://localhost:8000/meme\").then(function (response) {\n    // console.log(response);\n    let newURL = response.data.data;\n\n    if (checkMeme) {\n      setMemeURL(newURL);\n      setCheckMeme(false);\n    }\n  }).catch(function (err) {\n    console.log(err);\n  });\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function getWeather(city) {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=\" + apiKey + \"&units=\" + units;\n    fetch(url).then(async response => {\n      const weatherData = await response.json();\n\n      if (!response.ok) {\n        const error = weatherData && weatherData.message;\n        return Promise.reject(error);\n      }\n\n      temp = Math.round(weatherData.main.temp);\n      felt = Math.round(weatherData.main.feels_like);\n      descr = weatherData.weather[0].description;\n      var icon = weatherData.weather[0].icon;\n      imgURL = \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\";\n      setWeather({\n        location: city,\n        forecast: descr,\n        currentTemp: temp,\n        feltTemp: felt,\n        imgSrc: imgURL\n      }); //this always shows one search result behind in the console, but the actual displayed information should be accurate now.\n      // console.log(weather);\n    });\n  }\n\n  function handleClick() {\n    getWeather(inputText);\n    setInputText(\"\");\n  }\n\n  function addItem(newItem) {\n    setItems(prevItems => {\n      return [...prevItems, newItem];\n    });\n    let index = items.length;\n    axios.post(\"http://localhost:8000/\", {\n      name: newItem,\n      id: index\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  function deleteItem(id) {\n    axios.post(\"http://localhost:8000/delete\", {\n      id: id\n    }).then(response => {\n      console.log(response);\n    });\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Weather, {\n          whenChanged: handleChange,\n          whenClicked: handleClick,\n          location: weather.location,\n          forecast: weather.forecast,\n          currentTemp: weather.currentTemp,\n          feltTemp: weather.feltTemp,\n          imgSrc: weather.imgSrc,\n          inputValue: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleBox\",\n          children: /*#__PURE__*/_jsxDEV(Greeting, {\n            name: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(NewToDo, {\n            onAdd: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(ToDoItem, {\n                items: items,\n                onChecked: deleteItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Quotes, {\n            quote: quote.quote,\n            author: quote.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Meme, {\n            imgSrc: memeURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7AnRbdWJLAlzMp6Iuw8cMQs1otU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Greeting","NewToDo","ToDoItem","Weather","Quotes","Meme","jwt_decode","App","user","setUser","items","setItems","weather","setWeather","location","forecast","currentTemp","feltTemp","imgSrc","checkWeather","setCheckWeather","inputText","setInputText","quote","setQuote","author","checkQuote","setCheckQuote","memeURL","setMemeURL","checkMeme","setCheckMeme","query","units","temp","felt","descr","imgURL","apiKey","handleCallbackResponse","response","userObject","credential","saveUser","google","accounts","id","initialize","client_id","callback","renderButton","document","getElementById","theme","size","newUser","email","console","log","post","then","get","length","savedList","data","userToDo","map","note","name","catch","err","getWeather","todaysQuote","todaysAuthor","newURL","handleChange","event","newValue","target","value","city","url","fetch","weatherData","json","ok","error","message","Promise","reject","Math","round","main","feels_like","description","icon","handleClick","addItem","newItem","prevItems","index","deleteItem","filter","item"],"sources":["/home/kimhankins09/Web Development/organizer-app/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Greeting } from \"./components/Greeting\";\nimport { NewToDo } from \"./components/NewToDo\";\nimport { ToDoItem } from \"./components/ToDoItem\";\nimport { Weather } from \"./components/Weather\";\nimport { Quotes } from \"./components/Quotes\";\nimport { Meme } from \"./components/Meme\";\nimport jwt_decode from \"jwt-decode\";\n\nexport default function App() {\n  const [user, setUser] = useState({});\n  const [items, setItems] = useState([]);\n  const [weather, setWeather] = useState({\n    location: \"\",\n    forecast: \"\",\n    currentTemp: \"\",\n    feltTemp: \"\",\n    imgSrc: \"\",\n  });\n  const [checkWeather, setCheckWeather] = useState(true);\n  const [inputText, setInputText] = useState(\"\");\n  const [quote, setQuote] = useState({\n    quote: \"\",\n    author: \"\",\n  });\n  const [checkQuote, setCheckQuote] = useState(true);\n  const [memeURL, setMemeURL] = useState(\"\");\n  const [checkMeme, setCheckMeme] = useState(true);\n  let query = \"New York City\";\n  const units = \"metric\";\n  let temp = 0;\n  let felt = 0;\n  let descr = \"\";\n  let imgURL = \"\";\n  let apiKey = \"\";\n\n  //next step goals: (CURRENT) get google login working and save user with todo list items in db...(LATER) save most recently searched city in db so server can send it at the start each time\n\n  function handleCallbackResponse(response) {\n    // console.log(\"Encoded JWT ID token: \" + response.credential);\n    const userObject = jwt_decode(response.credential);\n    setUser(userObject);\n    saveUser();\n  }\n\n  useEffect(() => {\n    /* global google */\n    google.accounts.id.initialize({\n      client_id:\n        \"1094993871261-a0p2bbbe2t55215167an6eoll754ealg.apps.googleusercontent.com\",\n      callback: handleCallbackResponse,\n    });\n\n    google.accounts.id.renderButton(document.getElementById(\"signInDiv\"), {\n      theme: \"outline\",\n      size: \"large\",\n    });\n  }, []);\n\n  function saveUser() {\n    let newUser = user.email;\n    console.log(newUser);\n    axios\n      .post(\"http://localhost:8000/user\", { user: newUser })\n      .then(function (response) {\n        console.log(response);\n      });\n  }\n\n  axios\n    .get(\"http://localhost:8000/\")\n    .then(function (response) {\n      if (items.length === 0) {\n        let savedList = response.data.data;\n        let userToDo = savedList.map((note) => {\n          return note.name;\n        });\n        setItems([...userToDo]);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    })\n    .then(function () {});\n\n  axios\n    .get(\"http://localhost:8000/weather/\")\n    .then(function (response) {\n      apiKey = response.data.data;\n      if (checkWeather) {\n        getWeather(query);\n        console.log(\"did it\");\n        setCheckWeather(false);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n\n  //Possibly need a different quote generator as this one has too low of a daily request counter.\n  axios\n    .get(\"http://localhost:8000/quote\")\n    .then(function (response) {\n      // console.log(response);\n      let todaysQuote = response.data.data.quote;\n      let todaysAuthor = response.data.data.author;\n      if (checkQuote) {\n        setQuote({\n          quote: todaysQuote,\n          author: todaysAuthor,\n        });\n        setCheckQuote(false);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n\n  axios\n    .get(\"http://localhost:8000/meme\")\n    .then(function (response) {\n      // console.log(response);\n      let newURL = response.data.data;\n      if (checkMeme) {\n        setMemeURL(newURL);\n        setCheckMeme(false);\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function getWeather(city) {\n    const url =\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      city +\n      \"&appid=\" +\n      apiKey +\n      \"&units=\" +\n      units;\n\n    fetch(url).then(async (response) => {\n      const weatherData = await response.json();\n      if (!response.ok) {\n        const error = weatherData && weatherData.message;\n        return Promise.reject(error);\n      }\n\n      temp = Math.round(weatherData.main.temp);\n      felt = Math.round(weatherData.main.feels_like);\n      descr = weatherData.weather[0].description;\n      var icon = weatherData.weather[0].icon;\n      imgURL = \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\";\n      setWeather({\n        location: city,\n        forecast: descr,\n        currentTemp: temp,\n        feltTemp: felt,\n        imgSrc: imgURL,\n      });\n      //this always shows one search result behind in the console, but the actual displayed information should be accurate now.\n      // console.log(weather);\n    });\n  }\n\n  function handleClick() {\n    getWeather(inputText);\n    setInputText(\"\");\n  }\n\n  function addItem(newItem) {\n    setItems((prevItems) => {\n      return [...prevItems, newItem];\n    });\n    let index = items.length;\n    axios\n      .post(\"http://localhost:8000/\", { name: newItem, id: index })\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n  function deleteItem(id) {\n    axios.post(\"http://localhost:8000/delete\", { id: id }).then((response) => {\n      console.log(response);\n    });\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <div id=\"signInDiv\"></div>\n      {user && (\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-4\">\n            <Weather\n              whenChanged={handleChange}\n              whenClicked={handleClick}\n              location={weather.location}\n              forecast={weather.forecast}\n              currentTemp={weather.currentTemp}\n              feltTemp={weather.feltTemp}\n              imgSrc={weather.imgSrc}\n              inputValue={inputText}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"titleBox\">\n              <Greeting name={user.name} />\n            </div>\n            <div className=\"box\">\n              <NewToDo onAdd={addItem} />\n              <div>\n                <ul>\n                  <ToDoItem items={items} onChecked={deleteItem} />\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"box\">\n              <Quotes quote={quote.quote} author={quote.author} />\n            </div>\n            <div className=\"box\">\n              <Meme imgSrc={memeURL} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}