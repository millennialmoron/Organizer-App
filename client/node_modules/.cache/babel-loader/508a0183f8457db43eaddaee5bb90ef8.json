{"ast":null,"code":"var _jsxFileName = \"/home/kimhankins09/Web Development/organizer-app/src/components/Greeting.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useState } from \"react\";\nexport function Greeting(props) {\n  //   const [timeOfDay, setTimeOfDay] = useState(\"\");\n  let timeOfDay = \"\";\n  const today = new Date();\n  const currentTime = today.getHours();\n  let options = {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  };\n  const day = today.toLocaleDateString(\"en-us\", options);\n\n  function getGreeting() {\n    if (currentTime >= 4 && currentTime < 12) {\n      timeOfDay = \"Morning\";\n    } else if (currentTime >= 12 && currentTime < 17) {\n      timeOfDay = \"Afternoon\";\n    } else {\n      timeOfDay = \"Evening\";\n    }\n  }\n\n  getGreeting();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"greeting\",\n      children: [\"Good \", timeOfDay, \", \", props.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"date\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Greeting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"names":["Greeting","props","timeOfDay","today","Date","currentTime","getHours","options","weekday","day","month","year","toLocaleDateString","getGreeting","name"],"sources":["/home/kimhankins09/Web Development/organizer-app/src/components/Greeting.jsx"],"sourcesContent":["// import { useState } from \"react\";\n\nexport function Greeting(props) {\n  //   const [timeOfDay, setTimeOfDay] = useState(\"\");\n  let timeOfDay = \"\";\n  const today = new Date();\n  const currentTime = today.getHours();\n\n  let options = {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  };\n\n  const day = today.toLocaleDateString(\"en-us\", options);\n\n  function getGreeting() {\n    if (currentTime >= 4 && currentTime < 12) {\n      timeOfDay = \"Morning\";\n    } else if (currentTime >= 12 && currentTime < 17) {\n      timeOfDay = \"Afternoon\";\n    } else {\n      timeOfDay = \"Evening\";\n    }\n  }\n\n  getGreeting();\n\n  return (\n    <div>\n      <h2 className=\"greeting\">\n        Good {timeOfDay}, {props.name}!\n      </h2>\n      <h1 className=\"date\">{day}</h1>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AAEA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;EAC9B;EACA,IAAIC,SAAS,GAAG,EAAhB;EACA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;EACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAAN,EAApB;EAEA,IAAIC,OAAO,GAAG;IACZC,OAAO,EAAE,MADG;IAEZC,GAAG,EAAE,SAFO;IAGZC,KAAK,EAAE,MAHK;IAIZC,IAAI,EAAE;EAJM,CAAd;EAOA,MAAMF,GAAG,GAAGN,KAAK,CAACS,kBAAN,CAAyB,OAAzB,EAAkCL,OAAlC,CAAZ;;EAEA,SAASM,WAAT,GAAuB;IACrB,IAAIR,WAAW,IAAI,CAAf,IAAoBA,WAAW,GAAG,EAAtC,EAA0C;MACxCH,SAAS,GAAG,SAAZ;IACD,CAFD,MAEO,IAAIG,WAAW,IAAI,EAAf,IAAqBA,WAAW,GAAG,EAAvC,EAA2C;MAChDH,SAAS,GAAG,WAAZ;IACD,CAFM,MAEA;MACLA,SAAS,GAAG,SAAZ;IACD;EACF;;EAEDW,WAAW;EAEX,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,UAAd;MAAA,oBACQX,SADR,QACqBD,KAAK,CAACa,IAD3B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAI,SAAS,EAAC,MAAd;MAAA,UAAsBL;IAAtB;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;KAnCeT,Q"},"metadata":{},"sourceType":"module"}