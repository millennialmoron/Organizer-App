{"ast":null,"code":"var _jsxFileName = \"/home/kimhankins09/Web Development/organizer-app/src/components/MainApp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Greeting } from \"./Greeting\";\nimport { NewToDo } from \"./NewToDo\";\nimport { ToDoItem } from \"./ToDoItem\";\nimport { Weather } from \"./Weather\";\nimport { Quotes } from \"./Quotes\";\nimport { Meme } from \"./Meme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MainApp(props) {\n  _s();\n\n  const [items, setItems] = useState([{\n    name: \"\",\n    id: \"\"\n  }]);\n  const [checkList, setCheckList] = useState(true);\n  const [weather, setWeather] = useState({\n    location: \"\",\n    forecast: \"\",\n    currentTemp: \"\",\n    feltTemp: \"\",\n    imgSrc: \"\"\n  });\n  const [checkWeather, setCheckWeather] = useState(true);\n  const [inputText, setInputText] = useState(\"\");\n  const [quote, setQuote] = useState({\n    quote: \"\",\n    author: \"\"\n  });\n  const [checkQuote, setCheckQuote] = useState(true);\n  const [memeURL, setMemeURL] = useState(\"\");\n  const [checkMeme, setCheckMeme] = useState(true);\n  const [user, setUser] = useState(\"\");\n  let query = \"New York City\";\n  const units = \"metric\";\n  let temp = 0;\n  let felt = 0;\n  let descr = \"\";\n  let imgURL = \"\";\n  let apiKey = \"\";\n\n  function userReady(loginTest) {\n    let sessionLogin = loginTest;\n\n    if (sessionLogin) {\n      getStartingPage();\n    }\n\n    console.log(user);\n  }\n\n  function getStartingPage() {\n    axios.get(\"http://localhost:8000/user\").then(function (response) {\n      let sessionLogin = true;\n      let sessionUser = response.data.data;\n\n      if (sessionLogin) {\n        setUser(sessionUser);\n        sessionLogin = false;\n      }\n\n      console.log(sessionUser);\n    }).catch(function (err) {\n      console.log(err);\n    });\n    axios.get(\"http://localhost:8000/list\").then(function (response) {\n      //   console.log(response);\n      if (checkList) {\n        let savedList = response.data.data; // console.log(savedList);\n\n        let userToDo = [];\n\n        for (var i = 0; i < savedList.length; i++) {\n          userToDo[i] = {\n            name: savedList[i].name,\n            id: savedList[i]._id\n          };\n        } // console.log(userToDo);\n\n\n        setItems([...userToDo]);\n        setCheckList(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n    axios.get(\"http://localhost:8000/weather/\").then(function (response) {\n      apiKey = response.data.data.apiKey;\n      query = response.data.data.query;\n      console.log(query);\n\n      if (checkWeather) {\n        getWeather(query); // console.log(\"did it\");\n\n        setCheckWeather(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    }); //Possibly need a different quote generator as this one has too low of a daily request counter.\n\n    axios.get(\"http://localhost:8000/quote\").then(function (response) {\n      // console.log(response);\n      let todaysQuote = response.data.data.quote;\n      let todaysAuthor = response.data.data.author;\n\n      if (checkQuote) {\n        setQuote({\n          quote: todaysQuote,\n          author: todaysAuthor\n        });\n        setCheckQuote(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n    axios.get(\"http://localhost:8000/meme\").then(function (response) {\n      // console.log(response);\n      let newURL = response.data.data;\n\n      if (checkMeme) {\n        setMemeURL(newURL);\n        setCheckMeme(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function getWeather(city) {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=\" + apiKey + \"&units=\" + units;\n    fetch(url).then(async response => {\n      const weatherData = await response.json();\n\n      if (!response.ok) {\n        const error = weatherData && weatherData.message;\n        return Promise.reject(error);\n      }\n\n      temp = Math.round(weatherData.main.temp);\n      felt = Math.round(weatherData.main.feels_like);\n      descr = weatherData.weather[0].description;\n      var icon = weatherData.weather[0].icon;\n      imgURL = \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\";\n      setWeather({\n        location: city,\n        forecast: descr,\n        currentTemp: temp,\n        feltTemp: felt,\n        imgSrc: imgURL\n      });\n      axios.post(\"http://localhost:8000/weather\", {\n        city: city\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (err) {\n        console.log(err);\n      }); //this always shows one search result behind in the console, but the actual displayed information should be accurate now.\n      // console.log(weather);\n    });\n  }\n\n  function handleClick() {\n    getWeather(inputText);\n    setInputText(\"\");\n  }\n\n  function addItem(newItem) {\n    let id = uuidv4();\n\n    for (var i = 0; i < items.length; i++) {\n      if (id === items[i].id) {\n        id = uuidv4();\n      }\n    }\n\n    let newNote = {\n      name: newItem,\n      id: id\n    };\n    setItems(prevItems => {\n      return [...prevItems, newNote];\n    });\n    axios.post(\"http://localhost:8000/\", {\n      name: newItem,\n      id: id\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  function deleteItem(id, count) {\n    axios.post(\"http://localhost:8000/delete\", {\n      id: id\n    }).then(response => {\n      console.log(response);\n    });\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== count;\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onLoad: userReady,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Weather, {\n          whenChanged: handleChange,\n          whenClicked: handleClick,\n          location: weather.location,\n          forecast: weather.forecast,\n          currentTemp: weather.currentTemp,\n          feltTemp: weather.feltTemp,\n          imgSrc: weather.imgSrc,\n          inputValue: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleBox\",\n          children: /*#__PURE__*/_jsxDEV(Greeting, {\n            name: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(NewToDo, {\n            onAdd: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(ToDoItem, {\n                items: items,\n                onChecked: deleteItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Quotes, {\n            quote: quote.quote,\n            author: quote.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Meme, {\n            imgSrc: memeURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainApp, \"xtRaPG6pIBBUMPnlbp3xY90qQUc=\");\n\n_c = MainApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["React","useState","axios","v4","uuidv4","Greeting","NewToDo","ToDoItem","Weather","Quotes","Meme","MainApp","props","items","setItems","name","id","checkList","setCheckList","weather","setWeather","location","forecast","currentTemp","feltTemp","imgSrc","checkWeather","setCheckWeather","inputText","setInputText","quote","setQuote","author","checkQuote","setCheckQuote","memeURL","setMemeURL","checkMeme","setCheckMeme","user","setUser","query","units","temp","felt","descr","imgURL","apiKey","userReady","loginTest","sessionLogin","getStartingPage","console","log","get","then","response","sessionUser","data","catch","err","savedList","userToDo","i","length","_id","getWeather","todaysQuote","todaysAuthor","newURL","handleChange","event","newValue","target","value","city","url","fetch","weatherData","json","ok","error","message","Promise","reject","Math","round","main","feels_like","description","icon","post","handleClick","addItem","newItem","newNote","prevItems","deleteItem","count","filter","item","index"],"sources":["/home/kimhankins09/Web Development/organizer-app/src/components/MainApp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Greeting } from \"./Greeting\";\nimport { NewToDo } from \"./NewToDo\";\nimport { ToDoItem } from \"./ToDoItem\";\nimport { Weather } from \"./Weather\";\nimport { Quotes } from \"./Quotes\";\nimport { Meme } from \"./Meme\";\n\nexport function MainApp(props) {\n  const [items, setItems] = useState([\n    {\n      name: \"\",\n      id: \"\",\n    },\n  ]);\n  const [checkList, setCheckList] = useState(true);\n  const [weather, setWeather] = useState({\n    location: \"\",\n    forecast: \"\",\n    currentTemp: \"\",\n    feltTemp: \"\",\n    imgSrc: \"\",\n  });\n  const [checkWeather, setCheckWeather] = useState(true);\n  const [inputText, setInputText] = useState(\"\");\n  const [quote, setQuote] = useState({\n    quote: \"\",\n    author: \"\",\n  });\n  const [checkQuote, setCheckQuote] = useState(true);\n  const [memeURL, setMemeURL] = useState(\"\");\n  const [checkMeme, setCheckMeme] = useState(true);\n  const [user, setUser] = useState(\"\");\n  let query = \"New York City\";\n  const units = \"metric\";\n  let temp = 0;\n  let felt = 0;\n  let descr = \"\";\n  let imgURL = \"\";\n  let apiKey = \"\";\n\n  function userReady(loginTest) {\n    let sessionLogin = loginTest;\n    if (sessionLogin) {\n      getStartingPage();\n    }\n    console.log(user);\n  }\n\n  function getStartingPage() {\n    axios\n      .get(\"http://localhost:8000/user\")\n      .then(function (response) {\n        let sessionLogin = true;\n        let sessionUser = response.data.data;\n        if (sessionLogin) {\n          setUser(sessionUser);\n          sessionLogin = false;\n        }\n        console.log(sessionUser);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n\n    axios\n      .get(\"http://localhost:8000/list\")\n      .then(function (response) {\n        //   console.log(response);\n        if (checkList) {\n          let savedList = response.data.data;\n          // console.log(savedList);\n          let userToDo = [];\n          for (var i = 0; i < savedList.length; i++) {\n            userToDo[i] = {\n              name: savedList[i].name,\n              id: savedList[i]._id,\n            };\n          }\n          // console.log(userToDo);\n          setItems([...userToDo]);\n          setCheckList(false);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n\n    axios\n      .get(\"http://localhost:8000/weather/\")\n      .then(function (response) {\n        apiKey = response.data.data.apiKey;\n        query = response.data.data.query;\n        console.log(query);\n        if (checkWeather) {\n          getWeather(query);\n          // console.log(\"did it\");\n          setCheckWeather(false);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n\n    //Possibly need a different quote generator as this one has too low of a daily request counter.\n    axios\n      .get(\"http://localhost:8000/quote\")\n      .then(function (response) {\n        // console.log(response);\n        let todaysQuote = response.data.data.quote;\n        let todaysAuthor = response.data.data.author;\n        if (checkQuote) {\n          setQuote({\n            quote: todaysQuote,\n            author: todaysAuthor,\n          });\n          setCheckQuote(false);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n\n    axios\n      .get(\"http://localhost:8000/meme\")\n      .then(function (response) {\n        // console.log(response);\n        let newURL = response.data.data;\n        if (checkMeme) {\n          setMemeURL(newURL);\n          setCheckMeme(false);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function getWeather(city) {\n    const url =\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      city +\n      \"&appid=\" +\n      apiKey +\n      \"&units=\" +\n      units;\n\n    fetch(url).then(async (response) => {\n      const weatherData = await response.json();\n      if (!response.ok) {\n        const error = weatherData && weatherData.message;\n        return Promise.reject(error);\n      }\n\n      temp = Math.round(weatherData.main.temp);\n      felt = Math.round(weatherData.main.feels_like);\n      descr = weatherData.weather[0].description;\n      var icon = weatherData.weather[0].icon;\n      imgURL = \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\";\n      setWeather({\n        location: city,\n        forecast: descr,\n        currentTemp: temp,\n        feltTemp: felt,\n        imgSrc: imgURL,\n      });\n\n      axios\n        .post(\"http://localhost:8000/weather\", { city: city })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n      //this always shows one search result behind in the console, but the actual displayed information should be accurate now.\n      // console.log(weather);\n    });\n  }\n\n  function handleClick() {\n    getWeather(inputText);\n    setInputText(\"\");\n  }\n\n  function addItem(newItem) {\n    let id = uuidv4();\n    for (var i = 0; i < items.length; i++) {\n      if (id === items[i].id) {\n        id = uuidv4();\n      }\n    }\n    let newNote = {\n      name: newItem,\n      id: id,\n    };\n    setItems((prevItems) => {\n      return [...prevItems, newNote];\n    });\n\n    axios\n      .post(\"http://localhost:8000/\", { name: newItem, id: id })\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n  function deleteItem(id, count) {\n    axios.post(\"http://localhost:8000/delete\", { id: id }).then((response) => {\n      console.log(response);\n    });\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== count;\n      });\n    });\n  }\n\n  return (\n    <div onLoad={userReady}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-md-4\">\n          <Weather\n            whenChanged={handleChange}\n            whenClicked={handleClick}\n            location={weather.location}\n            forecast={weather.forecast}\n            currentTemp={weather.currentTemp}\n            feltTemp={weather.feltTemp}\n            imgSrc={weather.imgSrc}\n            inputValue={inputText}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"titleBox\">\n            <Greeting name={user} />\n          </div>\n          <div className=\"box\">\n            <NewToDo onAdd={addItem} />\n            <div>\n              <ul>\n                <ToDoItem items={items} onChecked={deleteItem} />\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"box\">\n            <Quotes quote={quote.quote} author={quote.author} />\n          </div>\n          <div className=\"box\">\n            <Meme imgSrc={memeURL} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}